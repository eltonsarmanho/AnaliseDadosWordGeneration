#!/usr/bin/env python3
"""
Script de verifica√ß√£o final das m√©tricas de escolas
"""

import pandas as pd
import json
from pathlib import Path

# Configura√ß√£o dos caminhos
BASE_DIR = Path(__file__).parent
CSV_TDE = BASE_DIR / "Modules" / "Longitudinal" / "Data" / "dados_longitudinais_TDE.csv"
CSV_VOCAB = BASE_DIR / "Modules" / "Longitudinal" / "Data" / "dados_longitudinais_Vocabulario.csv"
JSON_TDE = BASE_DIR / "Modules" / "Longitudinal" / "Data" / "resumo_longitudinal_TDE.json"
JSON_VOCAB = BASE_DIR / "Modules" / "Longitudinal" / "Data" / "resumo_longitudinal_Vocabulario.json"

print("‚úÖ Verifica√ß√£o Final - Consist√™ncia das M√©tricas de Escolas")
print("="*65)

# Carregar dados
df_tde = pd.read_csv(CSV_TDE)
df_vocab = pd.read_csv(CSV_VOCAB)

with open(JSON_TDE, 'r', encoding='utf-8') as f:
    resumo_tde = json.load(f)

with open(JSON_VOCAB, 'r', encoding='utf-8') as f:
    resumo_vocab = json.load(f)

# Calcular valores reais
escolas_tde_unicas = len(df_tde['Escola'].unique())
escolas_vocab_unicas = len(df_vocab['Escola'].unique())
escolas_total_agregado = len(set(df_tde['Escola'].unique()) | set(df_vocab['Escola'].unique()))

# Valores dos JSONs
escolas_tde_json = resumo_tde.get('perfil_demografico', {}).get('escolas_unicas', 0)
escolas_vocab_json = resumo_vocab.get('perfil_demografico', {}).get('escolas_unicas', 0)

print("üìä M√âTRICAS CALCULADAS:")
print(f"   TDE (CSV): {escolas_tde_unicas} escolas")
print(f"   TDE (JSON): {escolas_tde_json} escolas")
print(f"   Vocabul√°rio (CSV): {escolas_vocab_unicas} escolas")
print(f"   Vocabul√°rio (JSON): {escolas_vocab_json} escolas")
print(f"   Total Agregado (Uni√£o): {escolas_total_agregado} escolas")
print(f"   M√°ximo entre TDE e Vocab: {max(escolas_tde_unicas, escolas_vocab_unicas)} escolas")

print("\nüìã VALORES NO RELAT√ìRIO:")
print(f"   Tabela - Total Geral TDE: {escolas_tde_json}")
print(f"   Tabela - Total Geral Vocabul√°rio: {escolas_vocab_json}")
print(f"   Tabela - Total Geral Agregado: max({escolas_tde_json}, {escolas_vocab_json}) = {max(escolas_tde_json, escolas_vocab_json)}")
print(f"   M√©trica 'Escolas Participantes': max({escolas_tde_json}, {escolas_vocab_json}) = {max(escolas_tde_json, escolas_vocab_json)}")

print("\n‚úÖ VERIFICA√á√ÉO DE CONSIST√äNCIA:")
metric_escolas_participantes = max(escolas_tde_json, escolas_vocab_json)
total_agregado_tabela = max(escolas_tde_json, escolas_vocab_json)

if metric_escolas_participantes == total_agregado_tabela:
    print(f"   ‚úÖ CONSISTENTE: M√©trica 'Escolas Participantes' ({metric_escolas_participantes}) = Total Agregado da Tabela ({total_agregado_tabela})")
else:
    print(f"   ‚ùå INCONSISTENTE: M√©trica 'Escolas Participantes' ({metric_escolas_participantes}) ‚â† Total Agregado da Tabela ({total_agregado_tabela})")

print(f"\nüîç DETALHES SOBRE A ESCOLA '0':")
escolas_vocab_com_zero = df_vocab[df_vocab['Escola'] == '0']
if len(escolas_vocab_com_zero) > 0:
    print(f"   ‚ö†Ô∏è  Encontradas {len(escolas_vocab_com_zero)} entradas com escola '0' no Vocabul√°rio")
    print(f"   üí° Isso explica por que Vocabul√°rio tem {escolas_vocab_unicas} escolas (incluindo a escola '0')")
else:
    print(f"   ‚úÖ Nenhuma entrada com escola '0' encontrada")

print(f"\nüìù RESUMO FINAL:")
print(f"   ‚Ä¢ TDE: {escolas_tde_json} escolas v√°lidas")
print(f"   ‚Ä¢ Vocabul√°rio: {escolas_vocab_json} escolas (incluindo 1 entrada inv√°lida '0')")
print(f"   ‚Ä¢ Agregado Real: {escolas_total_agregado} escolas √∫nicas v√°lidas")
print(f"   ‚Ä¢ M√©trica no Relat√≥rio: {max(escolas_tde_json, escolas_vocab_json)} escolas")
